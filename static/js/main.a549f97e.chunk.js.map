{"version":3,"sources":["reducers/cartItemReducer.tsx","reducers/ProductsReducer.tsx","constants/index.tsx","reducers/index.tsx","store.tsx","serviceWorker.ts","components/item.tsx","actions/cartActions.tsx","components/cart.tsx","components/header.tsx","actions/productsAction.tsx","components/display.tsx","App.tsx","index.tsx"],"names":["initialState","items","total_quantity","total_price","products","index","photo","title","price","sizes","S","M","L","filters","PRICE","SIZE","SORT","rootReducer","combineReducers","CartItemReducer","state","action","cartItemsCopy","cartItemIndex","findIndex","item","alreadyInCart","type","forEach","size","quantity","push","Number","toFixed","cartItemQuantity","reduce","sum","filter","DisplayProductsReducer","category","producstsCopy","sortAndFilter","criterion","product","sort","a","b","Object","values","store","createStore","Boolean","window","location","hostname","match","ReactModal","setAppElement","Item","useSelector","dispatch","useDispatch","useState","modalProduct","showModal","sizeChosen","chooseSize","id","map","key","className","onClick","style","maxWidth","src","alt","paddingTop","entries","color","isOpen","onRequestClose","margin","onChange","event","target","value","disabled","connect","removeCartItem","removeItem","props","innerWidth","screenWidth","setScreenWidth","useEffect","addEventListener","display","shoppingCartShown","showShoppingCart","transform","fontSize","Header","displayProducts","Display","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a549f97e.chunk.js","sourcesContent":["import { CartItemAction } from '../actions/cartActions';\r\nimport { ADD_ITEM, REMOVE_ITEM } from '../constants/index';\r\n\r\nexport interface CartState {\r\n    items: CartItem[];\r\n    total_quantity: number;\r\n    total_price: number;\r\n};\r\n\r\ninterface Size {\r\n    size: string;\r\n    quantity: number;\r\n}\r\n\r\nexport interface CartItem {\r\n    title: string;\r\n    photo: string;\r\n    price: number;\r\n    sizes: Size[];\r\n};\r\n\r\nexport const initialState: CartState = {\r\n    items: [],\r\n    total_quantity: 0,\r\n    total_price: 0\r\n};\r\n\r\nexport function CartItemReducer(state = initialState, action: CartItemAction): CartState {\r\n    let cartItemsCopy = [...state.items];\r\n    let cartItemIndex = cartItemsCopy.findIndex(item => item.title === action.title);\r\n    let alreadyInCart = false;\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            if (cartItemIndex !== -1) {\r\n                cartItemsCopy[cartItemIndex].sizes.forEach(size => {\r\n                    if (size.size === action.size) {\r\n                        size.quantity++;\r\n                        alreadyInCart = true;\r\n                    }\r\n                })\r\n                if (!alreadyInCart) {\r\n                    cartItemsCopy[cartItemIndex].sizes.push({\r\n                        size: action.size,\r\n                        quantity: 1\r\n                    });\r\n                }\r\n                alreadyInCart = false;\r\n                return {\r\n                    items: [...cartItemsCopy],\r\n                    total_quantity: state.total_quantity + 1,\r\n                    total_price: Number((state.total_price + action.price).toFixed(2))\r\n                }\r\n            } else {\r\n                return {\r\n                    items: [...state.items\r\n                        , {\r\n                            title: action.title, \r\n                            photo: action.photo, \r\n                            price: action.price, \r\n                            sizes: [{\r\n                                size: action.size,\r\n                                quantity: 1\r\n                            }]\r\n                        }\r\n                    ],\r\n                    total_quantity: state.total_quantity + 1,\r\n                    total_price: Number((state.total_price + action.price).toFixed(2))\r\n                }\r\n            }\r\n        case REMOVE_ITEM:\r\n            let cartItemQuantity = cartItemsCopy[cartItemIndex].sizes.reduce((sum, size) => sum + size.quantity, 0)\r\n            return {\r\n                items: cartItemsCopy.filter(item => item.title !== action.title),\r\n                total_quantity: state.total_quantity - cartItemQuantity,\r\n                total_price: Number((state.total_price - action.price*cartItemQuantity).toFixed(2))\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { displayProductsAction } from \"../actions/productsAction\";\r\nimport { NEW, LOW_TO_HIGH, HIGH_TO_LOW, PRICE_ALL, UNDER_10, SIZE_ALL, S, M, L, SORT, PRICE, SIZE } from \"../constants/index\";\r\n\r\nconst products = [\r\n    {\r\n        index: 0,\r\n        photo: \"gsd.jpg\",\r\n        title: \"German Shepherd T-Shirt\",\r\n        price: 19.99,\r\n        sizes: {\r\n            S: 0,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 4,\r\n        photo: \"husky.jpg\",\r\n        title: \"Husky T-Shirt\",\r\n        price: 14.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 2,\r\n        photo: \"golden.jpg\",\r\n        title: \"Golden Retriever T-Shirt\",\r\n        price: 19.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 0,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 3,\r\n        photo: \"border.jpg\",\r\n        title: \"Border Collie T-Shirt\",\r\n        price: 9.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 1,\r\n        photo: \"pug.jpg\",\r\n        title: \"Pug T-Shirt\",\r\n        price: 6.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 0\r\n        }\r\n    }\r\n];\r\n\r\nconst filters = {\r\n    PRICE: PRICE_ALL,\r\n    SIZE: SIZE_ALL,\r\n    SORT: NEW\r\n};\r\n\r\nexport type Product = typeof products[0];\r\n  \r\nexport function DisplayProductsReducer(state = {products, filters}, action: displayProductsAction) {\r\n    switch (action.category) {\r\n        case PRICE:\r\n            filters.PRICE = action.type;\r\n            break\r\n        case SIZE:\r\n            filters.SIZE = action.type;\r\n            break\r\n        case SORT:\r\n            filters.SORT = action.type;\r\n            break\r\n    };\r\n\r\n    let producstsCopy = products\r\n    function sortAndFilter (criterion: string) {\r\n        switch (criterion) {\r\n            case PRICE_ALL:\r\n                break\r\n            case UNDER_10:\r\n                producstsCopy = producstsCopy.filter(product => product.price < 10);\r\n                break\r\n            case SIZE_ALL:\r\n                break\r\n            case S:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.S > 0);\r\n                break\r\n            case M:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.M > 0);\r\n                break\r\n            case L:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.L > 0);\r\n                break\r\n            case NEW:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => a.index - b.index);\r\n                break\r\n            case LOW_TO_HIGH:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => a.price - b.price);\r\n                break\r\n            case HIGH_TO_LOW:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => b.price - a.price);\r\n                break\r\n        }\r\n    }\r\n    Object.values(filters).forEach(filter => sortAndFilter(filter));\r\n    \r\n    return ({\r\n        products: producstsCopy,\r\n        filters: state.filters\r\n    })\r\n};\r\n\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport type ADD_ITEM = typeof ADD_ITEM;\r\n\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport type REMOVE_ITEM = typeof REMOVE_ITEM;\r\n\r\nexport const NEW = 'NEW';\r\nexport type NEW = typeof NEW;\r\n\r\nexport const LOW_TO_HIGH = 'LOW_TO_HIGH';\r\nexport type LOW_TO_HIGH = typeof LOW_TO_HIGH;\r\n\r\nexport const HIGH_TO_LOW = 'HIGH_TO_LOW';\r\nexport type HIGH_TO_LOW = typeof HIGH_TO_LOW;\r\n\r\nexport const PRICE_ALL = 'PRICE_ALL';\r\nexport type PRICE_ALL = typeof PRICE_ALL;\r\n\r\nexport const SIZE_ALL = 'SIZE_ALL';\r\nexport type SIZE_ALL = typeof SIZE_ALL;\r\n\r\nexport const UNDER_10 = 'UNDER_10';\r\nexport type UNDER_10 = typeof UNDER_10;\r\n\r\nexport const SORT = \"SORT\";\r\nexport type SORT = typeof SORT;\r\n\r\nexport const PRICE = \"PRICE\";\r\nexport type PRICE = typeof PRICE;\r\n\r\nexport const SIZE = \"SIZE\";\r\nexport type SIZE = typeof SIZE;\r\n\r\nexport const S = \"S\";\r\nexport type S = typeof S;\r\n\r\nexport const M = \"M\";\r\nexport type M = typeof M;\r\n\r\nexport const L = \"L\";\r\nexport type L = typeof L;","import { combineReducers } from 'redux';\r\nimport { CartItemReducer } from './cartItemReducer';\r\nimport { DisplayProductsReducer } from './ProductsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    CartItemReducer,\r\n    DisplayProductsReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { createStore } from 'redux';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../reducers/index';\r\nimport { Product } from '../reducers/ProductsReducer';\r\nimport { addItem } from '../actions/cartActions';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst Item = () => {\r\n    const products = useSelector((state: RootState) => state.DisplayProductsReducer.products);\r\n    const dispatch = useDispatch();\r\n\r\n    const [modalProduct, showModal] = useState<Product | null>(null);\r\n    \r\n    const [sizeChosen, chooseSize] = useState<string | null>(null);\r\n    \r\n    return (\r\n        <div id=\"items\">\r\n            { products.map( (product, index) => \r\n                <button key={index} className=\"modalClick\" onClick={() => showModal(product)}>   \r\n                    <div className=\"item\">\r\n                        <div className=\"item__photo\">\r\n                            <img style={{maxWidth: \"100%\"}} src={product.photo} alt={product.title}></img>\r\n                            <h3 className=\"item__title\">{product.title}</h3>\r\n                        </div>\r\n                        <div>\r\n                            <h3 className=\"item__price\">${product.price}</h3>\r\n                            <div style={{paddingTop: \"10px\"}}>\r\n                                {Object.entries(product.sizes).map((size, index) => \r\n                                    size[1] === 0 \r\n                                        ? <span className=\"item__available-sizes\" style={{color: \"#bfbfbf\"}} key={index}>{size[0]}</span>\r\n                                        : <span className=\"item__available-sizes\" key={index}>{size[0]}</span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )}\r\n            {modalProduct && \r\n                <ReactModal isOpen={true} onRequestClose={() => showModal(null)} className=\"modal__content\">\r\n                    <button className=\"modal__close\" onClick={() => showModal(null)}>&times;</button>\r\n                    <div className=\"modal__display\">\r\n                        <div>\r\n                            <img className=\"modal__photo\" src={modalProduct.photo} alt={modalProduct.title}></img>\r\n                        </div>\r\n                        <div className=\"modal__info\">\r\n                            <h2>{modalProduct.title}</h2>\r\n                            <h1 className=\"modal__price\">${modalProduct.price}</h1>\r\n                            <div>\r\n                                <h4 style={{margin: \"10px 0\"}}>SIZE:</h4>\r\n                                <select className=\"modal__choose-size\" onChange={(event) => chooseSize(event.target.value)}>\r\n                                    <option>Please select</option>\r\n                                    {Object.entries(modalProduct.sizes).map((size, index) => \r\n                                        size[1] === 0\r\n                                            ? <option disabled key={index} value={size[0]}>{size[0]} - Out of stock</option>\r\n                                            : <option key={index} value={size[0]}>{size[0]}</option>\r\n                                        )}\r\n                                </select>\r\n                                <button className=\"modal__add-to-cart\" onClick={() => {\r\n                                    dispatch(addItem(modalProduct, sizeChosen));\r\n                                    showModal(null);\r\n                                }}>ADD TO CART </button>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"modal_description\">\r\n                    </div>\r\n                </ReactModal>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Item;","import * as constants from '../constants/index';\r\nimport { Product } from '../reducers/ProductsReducer';\r\nimport { CartItem } from '../reducers/cartItemReducer';\r\n\r\n\r\nexport interface CartItemAction {\r\n    type: constants.ADD_ITEM | constants.REMOVE_ITEM;\r\n    photo: string;\r\n    title: string;\r\n    price: number;\r\n    size: string;\r\n};\r\n\r\nexport const addItem = (product: Product | null, size: string | null) => {\r\n    return ({\r\n        type: constants.ADD_ITEM,\r\n        title: product?.title,\r\n        photo: product?.photo,\r\n        price: product?.price,\r\n        size: size\r\n    });\r\n};\r\n\r\nexport const removeItem = (product: CartItem) => {\r\n    return ({\r\n        type: constants.REMOVE_ITEM,\r\n        title: product.title,\r\n        photo: product.photo,\r\n        price: product.price\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { removeItem } from '../actions/cartActions';\r\nimport { RootState } from '../reducers/index';\r\nimport { CartItem } from '../reducers/cartItemReducer';\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        items: state.CartItemReducer.items,\r\n        total_quantity: state.CartItemReducer.total_quantity,\r\n        total_price: state.CartItemReducer.total_price\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        removeCartItem: (product: CartItem) => {\r\n            dispatch(removeItem(product));\r\n        }\r\n    }\r\n}\r\n\r\ntype CartProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst Cart = (props: CartProps) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => setScreenWidth(window.innerWidth));\r\n    }, []);\r\n    \r\n    const screenSize = () => {\r\n        if (screenWidth > 600) { \r\n            return {display: \"block\"};\r\n        } else {\r\n            return {display: \"none\"};\r\n        }\r\n    };\r\n    \r\n    const [shoppingCartShown, showShoppingCart] = useState(screenSize());\r\n\r\n    return (\r\n        <div id=\"sidebar\">\r\n            <button id=\"shopping-cart-button\" onClick={() => showShoppingCart({display: \"grid\"})}>\r\n                <span id=\"shopping-cart-icon\" className=\"material-icons\">shopping_cart</span>\r\n                <span id=\"shopping-cart-quantity\">{props.total_quantity}</span>\r\n            </button>\r\n            <div  id=\"cart\" style={shoppingCartShown}>\r\n                <div id=\"cart-close\">\r\n                    <button onClick={() => showShoppingCart({display: \"none\"})}>\r\n                        <span className=\"material-icons\" style={{transform: \"rotate(90deg)\"}}>expand_less</span>\r\n                    </button>\r\n                </div>\r\n                <div id=\"cart-content\">\r\n                    <h4 className=\"cart__info\">You have {props.total_quantity} item(s) in the cart.</h4>\r\n                    <ul>\r\n                    {props.items?.map((item, index) => \r\n                        <li key={index}>\r\n                            <p>{item.title}</p>\r\n                            <div className=\"cart-item\">\r\n                                <img className=\"cart-item__photo\" src={item.photo} alt={item.title}></img>\r\n                                <div className=\"cart-item__quantity\">\r\n                                    <span style={{fontSize: \"14px\"}}>Size:</span>\r\n                                    <ul style={{fontSize: \"13px\"}}>\r\n                                        {item.sizes.map((size, index) => \r\n                                            <li key={index}>{size.size} x {size.quantity}</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                                <button className=\"cart-item__remove material-icons\" onClick={() => props.removeCartItem(item)}>delete_outline</button>\r\n                            </div>\r\n                        </li>)}\r\n                    </ul>\r\n                    <h4 className=\"cart__info\">Total price: {props.total_price}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1 id=\"header__title\">\r\n                    <span id=\"paw-icon\" className=\"material-icons\">pets</span>Fluffy T-Shirt Shop\r\n                </h1>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export const displayProducts = (category: string, criterion: string) => {\r\n    return ({\r\n        category,\r\n        type: criterion\r\n    })\r\n};\r\n\r\nexport type displayProductsAction = ReturnType<typeof displayProducts>;","import React from 'react';\r\nimport { displayProducts } from '../actions/productsAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UNDER_10, PRICE_ALL, NEW, HIGH_TO_LOW, LOW_TO_HIGH, SIZE_ALL, S, M, L, SORT, PRICE, SIZE } from '../constants/index';\r\n\r\n\r\nconst Display = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div id=\"display\">\r\n            <div id=\"filter-sort\">\r\n                <label>\r\n                    Sort:&nbsp;&nbsp;\r\n                    <select className=\"filter__options\" onChange={(event) => dispatch(displayProducts(SORT, event.target.value))}>\r\n                        <option value={NEW}>What's new</option>\r\n                        <option value={HIGH_TO_LOW}>Price high to low</option>\r\n                        <option value={LOW_TO_HIGH}>Price low to high</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div id=\"filter-price\">\r\n                <label>\r\n                    Price:&nbsp;&nbsp;\r\n                    <select className=\"filter__options\" onChange={(event) => dispatch(displayProducts(PRICE, event.target.value))}>\r\n                        <option value={PRICE_ALL}>All</option>\r\n                        <option value={UNDER_10}>Under $10</option>    \r\n                    </select> \r\n                </label>\r\n            </div>\r\n            <div id=\"filter-size\">\r\n                <label>\r\n                    Size:&nbsp;&nbsp;\r\n                    <select className=\"filter__options\" onChange={(event) => dispatch(displayProducts(SIZE, event.target.value))}>\r\n                        <option value={SIZE_ALL}>All</option>\r\n                        <option value={S}>S</option>\r\n                        <option value={M}>M</option>\r\n                        <option value={L}>L</option>   \r\n                    </select> \r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from 'react';\nimport './App.css';\nimport Item  from './components/item';\nimport Cart from './components/cart';\nimport Header from './components/header';\nimport Display from './components/display';\n\nexport function App() {\n  return (\n      <div>\n        <Header />\n        <div id=\"content\">\n          <div id=\"products\">\n            <Display />\n            <Item />\n          </div>\n          <Cart />\n        </div>\n      </div>\n    )\n};","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}