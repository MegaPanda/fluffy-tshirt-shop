{"version":3,"sources":["reducers/cartItemReducer.tsx","reducers/ProductsReducer.tsx","constants/index.tsx","reducers/index.tsx","store.tsx","serviceWorker.ts","components/item.tsx","actions/cartActions.tsx","components/cart.tsx","components/header.tsx","actions/productsAction.tsx","components/display.tsx","App.tsx","index.tsx"],"names":["initialState","items","total_quantity","total_price","products","index","photo","title","price","sizes","S","M","L","filters","PRICE","SIZE","SORT","rootReducer","combineReducers","CartItemReducer","state","action","cartItemsCopy","cartItemIndex","findIndex","item","alreadyInCart","type","forEach","size","quantity","push","Number","toFixed","cartItemQuantity","reduce","sum","filter","DisplayProductsReducer","category","producstsCopy","sortAndFilter","criterion","product","sort","a","b","Object","values","store","createStore","Boolean","window","location","hostname","match","ReactModal","setAppElement","Item","useSelector","dispatch","useDispatch","useState","modalProduct","showModal","sizeChosen","chooseSize","id","className","map","key","onClick","src","alt","isOpen","style","content","maxHeight","onRequestClose","onChange","event","target","value","entries","disabled","shopping_basket_quantity_styles","position","width","top","right","shopping_basket_icon_styles","shopping_basket_styles","borderTop","shopping_basket_triangle_up","height","borderLeft","borderRight","borderBottom","Cart","pawIcon","Header","scrollTo","behavior","displayProducts","display__border","filter__options","padding","fontSize","Display","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cac38fc2.chunk.js","sourcesContent":["import { CartItemAction } from '../actions/cartActions';\r\nimport { ADD_ITEM, REMOVE_ITEM } from '../constants/index';\r\n\r\nexport interface CartState {\r\n    items: CartItem[];\r\n    total_quantity: number;\r\n    total_price: number;\r\n};\r\n\r\ninterface Size {\r\n    size: string;\r\n    quantity: number;\r\n}\r\n\r\nexport interface CartItem {\r\n    title: string;\r\n    photo: string;\r\n    price: number;\r\n    sizes: Size[];\r\n};\r\n\r\nexport const initialState: CartState = {\r\n    items: [],\r\n    total_quantity: 0,\r\n    total_price: 0\r\n};\r\n\r\nexport function CartItemReducer(state = initialState, action: CartItemAction): CartState {\r\n    let cartItemsCopy = [...state.items];\r\n    let cartItemIndex = cartItemsCopy.findIndex(item => item.title === action.title);\r\n    let alreadyInCart = false;\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            if (cartItemIndex !== -1) {\r\n                cartItemsCopy[cartItemIndex].sizes.forEach(size => {\r\n                    if (size.size === action.size) {\r\n                        size.quantity++;\r\n                        alreadyInCart = true;\r\n                    }\r\n                })\r\n                if (!alreadyInCart) {\r\n                    cartItemsCopy[cartItemIndex].sizes.push({\r\n                        size: action.size,\r\n                        quantity: 1\r\n                    });\r\n                }\r\n                alreadyInCart = false;\r\n                return {\r\n                    items: [...cartItemsCopy],\r\n                    total_quantity: state.total_quantity + 1,\r\n                    total_price: Number((state.total_price + action.price).toFixed(2))\r\n                }\r\n            } else {\r\n                return {\r\n                    items: [...state.items\r\n                        , {\r\n                            title: action.title, \r\n                            photo: action.photo, \r\n                            price: action.price, \r\n                            sizes: [{\r\n                                size: action.size,\r\n                                quantity: 1\r\n                            }]\r\n                        }\r\n                    ],\r\n                    total_quantity: state.total_quantity + 1,\r\n                    total_price: Number((state.total_price + action.price).toFixed(2))\r\n                }\r\n            }\r\n        case REMOVE_ITEM:\r\n            let cartItemQuantity = cartItemsCopy[cartItemIndex].sizes.reduce((sum, size) => sum + size.quantity, 0)\r\n            return {\r\n                items: cartItemsCopy.filter(item => item.title !== action.title),\r\n                total_quantity: state.total_quantity - cartItemQuantity,\r\n                total_price: Number((state.total_price - action.price*cartItemQuantity).toFixed(2))\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { displayProductsAction } from \"../actions/productsAction\";\r\nimport { NEW, LOW_TO_HIGH, HIGH_TO_LOW, PRICE_ALL, UNDER_10, SIZE_ALL, S, M, L, SORT, PRICE, SIZE } from \"../constants/index\";\r\n\r\nconst products = [\r\n    {\r\n        index: 0,\r\n        photo: \"gsd.jpg\",\r\n        title: \"German Shepherd\",\r\n        price: 19.99,\r\n        sizes: {\r\n            S: 0,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 4,\r\n        photo: \"husky.jpg\",\r\n        title: \"Husky\",\r\n        price: 14.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 2,\r\n        photo: \"golden.jpg\",\r\n        title: \"Golden Retriever\",\r\n        price: 19.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 0,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 3,\r\n        photo: \"border.jpg\",\r\n        title: \"Border Collie\",\r\n        price: 9.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 3\r\n        }\r\n    },\r\n    {\r\n        index: 1,\r\n        photo: \"pug.jpg\",\r\n        title: \"Pug\",\r\n        price: 6.99,\r\n        sizes: {\r\n            S: 2,\r\n            M: 5,\r\n            L: 0\r\n        }\r\n    }\r\n];\r\n\r\nconst filters = {\r\n    PRICE: PRICE_ALL,\r\n    SIZE: SIZE_ALL,\r\n    SORT: NEW\r\n};\r\n\r\nexport type Product = typeof products[0];\r\n  \r\nexport function DisplayProductsReducer(state = {products, filters}, action: displayProductsAction) {\r\n    switch (action.category) {\r\n        case PRICE:\r\n            filters.PRICE = action.type;\r\n            break\r\n        case SIZE:\r\n            filters.SIZE = action.type;\r\n            break\r\n        case SORT:\r\n            filters.SORT = action.type;\r\n            break\r\n    };\r\n\r\n    let producstsCopy = products\r\n    function sortAndFilter (criterion: string) {\r\n        switch (criterion) {\r\n            case PRICE_ALL:\r\n                break\r\n            case UNDER_10:\r\n                producstsCopy = producstsCopy.filter(product => product.price < 10);\r\n                break\r\n            case SIZE_ALL:\r\n                break\r\n            case S:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.S > 0);\r\n                break\r\n            case M:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.M > 0);\r\n                break\r\n            case L:\r\n                producstsCopy = producstsCopy.filter(product => product.sizes.L > 0);\r\n                break\r\n            case NEW:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => a.index - b.index);\r\n                break\r\n            case LOW_TO_HIGH:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => a.price - b.price);\r\n                break\r\n            case HIGH_TO_LOW:\r\n                producstsCopy = [...producstsCopy].sort((a, b) => b.price - a.price);\r\n                break\r\n        }\r\n    }\r\n    Object.values(filters).forEach(filter => sortAndFilter(filter));\r\n    \r\n    return ({\r\n        products: producstsCopy,\r\n        filters: state.filters\r\n    })\r\n};\r\n\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport type ADD_ITEM = typeof ADD_ITEM;\r\n\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport type REMOVE_ITEM = typeof REMOVE_ITEM;\r\n\r\nexport const NEW = 'NEW';\r\nexport type NEW = typeof NEW;\r\n\r\nexport const LOW_TO_HIGH = 'LOW_TO_HIGH';\r\nexport type LOW_TO_HIGH = typeof LOW_TO_HIGH;\r\n\r\nexport const HIGH_TO_LOW = 'HIGH_TO_LOW';\r\nexport type HIGH_TO_LOW = typeof HIGH_TO_LOW;\r\n\r\nexport const PRICE_ALL = 'PRICE_ALL';\r\nexport type PRICE_ALL = typeof PRICE_ALL;\r\n\r\nexport const SIZE_ALL = 'SIZE_ALL';\r\nexport type SIZE_ALL = typeof SIZE_ALL;\r\n\r\nexport const UNDER_10 = 'UNDER_10';\r\nexport type UNDER_10 = typeof UNDER_10;\r\n\r\nexport const SORT = \"SORT\";\r\nexport type SORT = typeof SORT;\r\n\r\nexport const PRICE = \"PRICE\";\r\nexport type PRICE = typeof PRICE;\r\n\r\nexport const SIZE = \"SIZE\";\r\nexport type SIZE = typeof SIZE;\r\n\r\nexport const S = \"S\";\r\nexport type S = typeof S;\r\n\r\nexport const M = \"M\";\r\nexport type M = typeof M;\r\n\r\nexport const L = \"L\";\r\nexport type L = typeof L;","import { combineReducers } from 'redux';\r\nimport { CartItemReducer } from './cartItemReducer';\r\nimport { DisplayProductsReducer } from './ProductsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    CartItemReducer,\r\n    DisplayProductsReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { createStore } from 'redux';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../reducers/index';\r\nimport { Product } from '../reducers/ProductsReducer';\r\nimport { addItem } from '../actions/cartActions';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst Item = () => {\r\n    const products = useSelector((state: RootState) => state.DisplayProductsReducer.products);\r\n    const dispatch = useDispatch();\r\n\r\n    const [modalProduct, showModal] = useState<Product | null>(null);\r\n    \r\n    const [sizeChosen, chooseSize] = useState<string | null>(null);\r\n    \r\n    return (\r\n        <div id=\"items\" className=\"grid grid-cols-2 p-4 gap-4 sm:grid-cols-3 lg:grid-cols-4 max-w-screen-xl m-auto\">\r\n            { products.map( (product, index) => \r\n                <button key={index} className=\"m-auto cursor-pointer\" onClick={() => showModal(product)}>   \r\n                    <div className=\"py-4\">\r\n                        <img src={product.photo} alt={product.title}></img>\r\n                        <div>\r\n                            <h3 className=\"my-3 h-8 leading-none text-gray-900 font-bold\">{product.title}</h3>\r\n                            <h3 className=\"text-orange-800 font-bold\">${product.price}</h3>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )}\r\n            {modalProduct && \r\n                <ReactModal isOpen={true} className=\"w-4/5 mx-auto mt-20 bg-indigo-100 pb-10 border border-gray-500 overflow-auto\" style={{content: {maxHeight: \"80vh\"}}} \r\n                onRequestClose={() => {\r\n                    showModal(null);\r\n                    chooseSize(null);\r\n                    }}>\r\n                    <div className=\"text-right\">\r\n                        <button className=\"text-2xl text-gray-600 mr-2\" onClick={() => showModal(null)}>&times;</button>\r\n                    </div>\r\n                    <div className=\"w-2/3 md:w-11/12 m-auto grid md:grid-cols-2 md:gap-8\">\r\n                        <img className=\"\" src={modalProduct.photo} alt={modalProduct.title}></img>\r\n                        <div className=\"pt-8 text-left\">\r\n                            <h1 className=\"text-xl text-gray-900 font-bold\">{modalProduct.title}</h1>\r\n                            <h1 className=\"text-2xl text-orange-800 font-bold my-6\">${modalProduct.price}</h1>\r\n                            <div className=\"md:pt-4\">\r\n                                <h4 className=\"font-bold mb-2\">SIZE:</h4>\r\n                                <select className=\"w-full border border-black rounded-sm p-1\" onChange={(event) => chooseSize(event.target.value)}>\r\n                                    <option>Please select</option>\r\n                                    {Object.entries(modalProduct.sizes).map((size, index) => \r\n                                        size[1] === 0\r\n                                            ? <option disabled key={index} value={size[0]}>{size[0]} - Out of stock</option>\r\n                                            : <option key={index} value={size[0]}>{size[0]}</option>\r\n                                        )}\r\n                                </select>\r\n                                {sizeChosen === null \r\n                                    ? <button className=\"mt-4 w-full text-white font-bold bg-green-600 rounded-sm p-1 cursor-not-allowed\">ADD TO BASKET</button>\r\n                                    : <button className=\"mt-4 w-full text-white font-bold bg-green-600 hover:bg-green-700 rounded-sm p-1\" onClick={() => {\r\n                                        dispatch(addItem(modalProduct, sizeChosen));\r\n                                        showModal(null);\r\n                                        chooseSize(null);\r\n                                      }}>ADD TO BASKET </button>\r\n                                }\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"modal_description\">\r\n                    </div>\r\n                </ReactModal>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Item;","import * as constants from '../constants/index';\r\nimport { Product } from '../reducers/ProductsReducer';\r\nimport { CartItem } from '../reducers/cartItemReducer';\r\n\r\n\r\nexport interface CartItemAction {\r\n    type: constants.ADD_ITEM | constants.REMOVE_ITEM;\r\n    photo: string;\r\n    title: string;\r\n    price: number;\r\n    size: string;\r\n};\r\n\r\nexport const addItem = (product: Product | null, size: string | null) => {\r\n    return ({\r\n        type: constants.ADD_ITEM,\r\n        title: product?.title,\r\n        photo: product?.photo,\r\n        price: product?.price,\r\n        size: size\r\n    });\r\n};\r\n\r\nexport const removeItem = (product: CartItem) => {\r\n    return ({\r\n        type: constants.REMOVE_ITEM,\r\n        title: product.title,\r\n        photo: product.photo,\r\n        price: product.price\r\n    })\r\n}","import React, { CSSProperties } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeItem } from '../actions/cartActions';\r\nimport { RootState } from '../reducers/index';\r\n\r\nconst shopping_basket_quantity_styles = {\r\n    position: \"relative\",\r\n    width: \"16px\",\r\n    top: \"16px\",\r\n    right: \"-18px\"\r\n} as CSSProperties;\r\n\r\nconst shopping_basket_icon_styles = {\r\n    position: \"relative\",\r\n    right: \"8px\",\r\n} as CSSProperties;\r\n\r\nconst shopping_basket_styles = {\r\n    top: \"61px\",\r\n    right: \"0\",\r\n    width: \"350px\",\r\n    maxHeight: \"70vh\",\r\n    borderTop: \"none\"\r\n} as CSSProperties;\r\n\r\nconst shopping_basket_triangle_up = {\r\n    width: \"0\",\r\n    height: \"0\",\r\n    borderLeft: \"14px solid transparent\",\r\n    borderRight: \"14px solid transparent\",\r\n    borderBottom: \"12px solid #cbd5e0\",\r\n    top: \"49px\",\r\n    right: \"12px\"\r\n} as CSSProperties;\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const items = useSelector((state: RootState) => state.CartItemReducer.items);\r\n    const total_quantity = useSelector((state: RootState) => state.CartItemReducer.total_quantity);\r\n    const total_price = useSelector((state: RootState) => state.CartItemReducer.total_price);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"self-end group pl-2 pb-5 sm:pb-4\">\r\n            {/* shopping basket icon and item quantity */}\r\n            <button className=\"flex\">\r\n                <span style={shopping_basket_quantity_styles} className=\"inline-block bg-gray-300 text-blue-900 text-sm font-bold leading-none z-10\">{total_quantity}</span>\r\n                <span style={shopping_basket_icon_styles} className=\"inline-block material-icons text-4xl z-0\">shopping_basket</span>\r\n            </button>\r\n            {/* shopping basket dropdown */}\r\n            {total_quantity === 0 \r\n                ? null\r\n                : <div className=\"hidden sm:group-hover:block\">\r\n                    <div className=\"absolute\" style={shopping_basket_triangle_up} ></div>\r\n                    <div className=\"absolute border border-gray-500 bg-gray-300 text-gray-800 text-base overflow-auto\" style={shopping_basket_styles} >\r\n                        <h4 className=\"px-4 py-2 bg-gray-400\">You have <span className=\"font-bold\">{total_quantity}</span> item(s) in the basket.</h4>\r\n                        <ul className=\"border divide-y-2 divide-gray-400\">\r\n                        {items.map((item, index) => \r\n                            <li key={index} className=\"p-4 flex justify-between\">\r\n                                <img className=\"w-32\" src={item.photo} alt={item.title}></img>\r\n                                <div className=\"w-32\">\r\n                                    <p className=\"pb-5 text-lg text-orange-800 font-bold\">${item.price}</p>\r\n                                    <p className=\"text-sm font-bold\">{item.title}</p>\r\n                                    <ul className=\"leading-tight text-sm\">\r\n                                        {item.sizes.map((size, index) => \r\n                                            <li key={index}><span className=\"inline-block w-4\">{size.size}</span> x {size.quantity}</li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                                    <button className=\"material-icons self-end\" onClick={() => dispatch(removeItem(item))}>delete_outline</button>\r\n                            </li>)}\r\n                        </ul>\r\n                        <h4 className=\"px-4 py-2 font-bold\" style={{borderTop: \"2px solid #cbd5e0\"}}>Total price: <span className=\"float-right\">${total_price}</span></h4>\r\n                        <div className=\"flex justify-around p-4 bg-gray-400\">\r\n                            <button className=\"w-32 py-4 border border-gray-500 bg-gray-300 hover:bg-gray-400 text-sm font-bold\">VIEW BASKET</button>\r\n                            <button className=\"w-32 py-4 border border-gray-500 bg-green-600 hover:bg-green-700 text-sm text-white font-bold\">CHECKOUT</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Cart;","import React from 'react';\r\nimport Cart from './cart';\r\n\r\nconst pawIcon = {\r\n    top: \"3px\"\r\n};\r\n\r\nconst Header = () => {\r\n    const scrollTop = () => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n    };\r\n\r\n    return (\r\n        <div className=\"fixed pt-5 px-8 sm:px-8 sm:pt-4 w-screen text-xl sm:text-3xl bg-blue-900 text-gray-300\">\r\n            <header className=\"relative max-w-screen-xl m-auto flex justify-between\">\r\n                <h1 className=\"font-bold pb-5 sm:pb-4 cursor-pointer\" onClick={() => scrollTop()}>\r\n                    <span className=\"material-icons relative pr-2 sm:text-3xl\" style={pawIcon}>pets</span>Fluffy T-Shirt Shop\r\n                </h1>\r\n                <Cart />\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export const displayProducts = (category: string, criterion: string) => {\r\n    return ({\r\n        category,\r\n        type: criterion\r\n    })\r\n};\r\n\r\nexport type displayProductsAction = ReturnType<typeof displayProducts>;","import React from 'react';\r\nimport { displayProducts } from '../actions/productsAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UNDER_10, PRICE_ALL, NEW, HIGH_TO_LOW, LOW_TO_HIGH, SIZE_ALL, S, M, L, SORT, PRICE, SIZE } from '../constants/index';\r\n\r\nconst display__border = {\r\n    borderBottom: \"1px solid #5D6D7E\"\r\n}\r\n\r\nconst filter__options = {\r\n    width: \"150px\",\r\n    padding: \"2px\",\r\n    fontSize: \"14px\"\r\n};\r\n\r\nconst Display = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"max-w-screen-xl m-auto pb-6 pt-24 sm:pt-24 flex flex-col text-center sm:flex-row sm:justify-between sm:px-4\" style={display__border}>\r\n            <div className=\"pb-3 sm:pb-0\">\r\n                <label>\r\n                    Sort:&nbsp;&nbsp;\r\n                    <select style={filter__options} onChange={(event) => dispatch(displayProducts(SORT, event.target.value))}>\r\n                        <option value={NEW}>What's new</option>\r\n                        <option value={HIGH_TO_LOW}>Price high to low</option>\r\n                        <option value={LOW_TO_HIGH}>Price low to high</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div className=\"pb-3 sm:pb-0\">\r\n                <label>\r\n                    Price:&nbsp;&nbsp;\r\n                    <select style={filter__options} onChange={(event) => dispatch(displayProducts(PRICE, event.target.value))}>\r\n                        <option value={PRICE_ALL}>All</option>\r\n                        <option value={UNDER_10}>Under $10</option>    \r\n                    </select> \r\n                </label>\r\n            </div>\r\n            <div id=\"filter-size\">\r\n                <label>\r\n                    Size:&nbsp;&nbsp;\r\n                    <select style={filter__options} onChange={(event) => dispatch(displayProducts(SIZE, event.target.value))}>\r\n                        <option value={SIZE_ALL}>All</option>\r\n                        <option value={S}>S</option>\r\n                        <option value={M}>M</option>\r\n                        <option value={L}>L</option>   \r\n                    </select> \r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from 'react';\nimport './App.css';\nimport Item  from './components/item';\nimport Header from './components/header';\nimport Display from './components/display';\n\nexport function App() {\n  return (\n      <div>\n        <Header />\n        <div id=\"content\">\n          <div id=\"products\">\n            <Display />\n            <Item />\n          </div>\n        </div>\n      </div>\n    )\n};","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\nimport './tailwind.generated.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}